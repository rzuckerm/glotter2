name: Makefile CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  read-config:
    runs-on: ubuntu-latest

    outputs:
      config: ${{ steps.repo-config.outputs }}

    steps:
      - uses: actions/checkout@v4
  
      - name: Read repo config
        uses: pietrobolcato/action-read-yaml@1.1.0
        id: repo-config
        with:
          config: repo-config.yml
  
  lint:
    runs-on: ubuntu-latest
    needs: read-config

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: "${{ needs.read-config.outputs.config['python-versions'][0] }}"

    - uses: snok/install-poetry@v1
      with:
        version: "${{ needs.read-config.outputs.config['poetry-version'] }}"
        virtualenvs-create: false
        virtualenvs-in-project: false

    - name: Lint
      run: make lint

  test:
    needs: read-config

    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ needs.read-config.outputs.config['python-versions'] }}
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - uses: snok/install-poetry@v1
      with:
        version: "${{ needs.read-config.outputs.config['poetry-version'] }}"
        virtualenvs-create: false
        virtualenvs-in-project: false

    - name: Test
      run: make test

  test-results:
    name: Test Results
    needs: test
    runs-on: ubuntu-latest
    if: ${{ always() }}

    steps:
      - run: |
          result="${{ needs.test.result }}"
          if [[ $result == "success" || $result == "skipped" ]]; then
            exit 0
          else
            exit 1
          fi

  doc:
    runs-on: ubuntu-latest
    needs: read-config

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: "${{ needs.read-config.outputs.config['python-versions'][0] }}"

    - uses: snok/install-poetry@v1
      with:
        version: "${{ needs.read-config.outputs.config['poetry-version'] }}"
        virtualenvs-create: false
        virtualenvs-in-project: false

    - name: Test
      run: make test

    - name: Coverage Badge
      run: make coverage-badge

    - name: Doc
      run: make doc

    - name: Copy code coverage
      run: cp -r .meta/html_cov .meta/doc

    - name: Move coverage badge
      run: mv .meta/html_cov/badge.svg .meta/doc

    - name: Publish doc
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: .meta/doc
        token: ${{ secrets.REPO_TOKEN }}
      if: ${{ github.ref == 'refs/heads/main' }}
